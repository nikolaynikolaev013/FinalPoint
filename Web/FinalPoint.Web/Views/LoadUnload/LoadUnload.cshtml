 @model LoadUnloadIndexViewModel
@{
    ViewData["Title"] = Model.Type;
    var availableLines = Model.Lines?.Select(x => new SelectListItem(x.Value, x.Key));
}

<div class="container-fluid">
    <div class="row mt-4">
        <div class="col-md-2 p-0">
            <h5 class="text-center text-secondary mt-1">@(Model.Type == ProtocolType.Loading ? $"Товарене към:" : $"Разтоварване от:")</h5>
        </div>

        <div class="col-md-10">
            <form method="post" class="col-md-12">
                <div class="input-group form-group">
                    <select asp-for="LineToLoad" asp-items="availableLines" data-live-search="true" class="col-md-10 selectpicker custom-select form-control">
                    </select>

                    <div class="input-group-append">
                        <button id="new" type="submit" class="btn btn-outline-secondary form-control">Нов протокол</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @section Scripts{
        <script>
            @*$("#NewProtocolConfirmation").hide();
            $("#AlreadyOpenProtocolConfirmation").hide();

            $("#new").click(function () {
                $("#NewProtocolConfirmation").hide();
                $("#AlreadyOpenProtocolConfirmation").hide();

                let recipentOffice = $("#LineToLoad").val();
                let type = 1;
                let data = { 'type': type, 'recipentOfficeId': recipentOffice };

                $.ajax({
                    type: "POST",
                    url: "/api/Protocols",
                    data: JSON.stringify(data),
                    success: function (data) {
                        if (!data.alreadyCreated) {

                            $("#NewProtocolConfirmation").show();
                            $("#protocolNumber").text(data.protocols[0].id);
                        } else {
                            $("#AlreadyOpenProtocolConfirmation").show();
                            $("#protocolNumber").text(data.protocols[0].id);
                        }
                    },
                    contentType: "application/json",

                });
            })*@
        </script>
    }
